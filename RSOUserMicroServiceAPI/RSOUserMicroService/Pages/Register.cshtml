@page "/RegisterUI"
@model RSOUserMicroService.Pages.LoginUIModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Register";
}
<div class="row">
    <div class="col-md-6 offset-md-3">
        <h1 style="color: white; text-align: center;">Register</h1>

        <label for="thing">Username:</label>
        <input type="text" id="username" name="username" required class="form-control"><br><br>

        <label for="price">Email:</label>
        <input type="email" id="email" name="email" required class="form-control"><br><br>

        <label for="category">Password:</label>
        <input type="password" id="password" name="password" required class="form-control"><br><br>

        <label for="category">Address:</label>
        <input type="text" id="address" name="address" required class="form-control"><br><br>

        <label for="category">Zipcode:</label>
        <input type="number" id="zipcode" name="zipcode" required class="form-control"><br><br>

        <button id="registerBtn" class="btn btn-primary">Register</button>
    </div>
</div>

<script>
    $(document).ready(function () {
        // Attach click event handler to the login button
        $("#registerBtn").click(function () {
            const url = '/register'; // Assuming that the registration API is hosted on the same server
            const username = $("#username").val();
            const email = $("#email").val();
            const password = $("#password").val();
            const address = $("#address").val();
            const zipcode = $("#zipcode").val();

            // Perform AJAX POST request using jQuery
            $.ajax({
                url: url,
                async: true,
                type: 'POST',
                contentType: 'application/json', // Set content type to JSON
                data: JSON.stringify({
                    UserName: username,
                    UserEmail: email,
                    UserPassword: password,
                    UserAddress: address,
                    UserZipcode: zipcode
                }),
                success: function (data) {
                    console.log(data);
                    localStorage.setItem('jwtToken', data);
                    const decodedToken = decodeJwt(data);
                    localStorage.setItem('decodedToken', JSON.stringify(decodedToken));
                },
                error: function (error) {
                    console.error('Error:', error);
                }
            });
        });
    });
</script>